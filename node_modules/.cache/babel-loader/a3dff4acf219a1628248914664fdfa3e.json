{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raia3\\\\my-react-app\\\\src\\\\components\\\\Main\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport useStyles from './styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport formatDate from '../../../utils/formatDate';\nimport { useSpeechContext } from '@speechly/react-client';\nimport Snackbar from '../../Snackbar/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  amount: '',\n  category: '',\n  type: 'Income',\n  date: formatDate(new Date())\n};\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    addTransaction\n  } = useContext(ExpenseTrackerContext);\n  const [formData, setFormData] = useState(initialState);\n  const {\n    segment\n  } = useSpeechContext();\n  const [open, setOpen] = React.useState(false);\n\n  const createTransaction = () => {\n    const transaction = { ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4()\n    };\n    addTransaction(transaction);\n    setFormData(initialState);\n    setOpen(true);\n    addTransaction({ ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4()\n    });\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === 'add_expense') {\n        setFormData({ ...formData,\n          type: 'Expense'\n        });\n      } else if (segment.intent.intent === 'add_income') {\n        setFormData({ ...formData,\n          type: 'Income'\n        });\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\n        return createTransaction();\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\n        return setFormData(initialState);\n      }\n\n      segment.entities.forEach(s => {\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\n\n        switch (s.type) {\n          case 'amount':\n            setFormData({ ...formData,\n              amount: s.value\n            });\n            break;\n\n          case 'category':\n            if (incomeCategories.map(iC => iC.type).includes(category)) {\n              setFormData({ ...formData,\n                type: 'Income',\n                category\n              });\n            } else if (expenseCategories.map(iC => iC.type).includes(category)) {\n              setFormData({ ...formData,\n                type: 'Expense',\n                category\n              });\n            }\n\n            break;\n\n          case 'date':\n            setFormData({ ...formData,\n              date: s.value\n            });\n            break;\n\n          default:\n            break;\n        }\n      });\n\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\n        createTransaction();\n      }\n    }\n  }, [segment]);\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(CustomizedSnackbar, {\n      open: open,\n      setOpen: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        children: segment && segment.words.map(w => w.value).join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: formData.type,\n          onChange: e => setFormData({ ...formData,\n            type: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Income\",\n            children: \"Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Expense\",\n            children: \"Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: formData.category,\n          onChange: e => setFormData({ ...formData,\n            category: e.target.value\n          }),\n          children: selectedCategories.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: c.type,\n            children: c.type\n          }, c.type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 44\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        label: \"Amount\",\n        value: formData.amount,\n        onChange: e => setFormData({ ...formData,\n          amount: e.target.value\n        }),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      justify: \"flex-end\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"  \",\n        type: \"date\",\n        value: formData.date,\n        onChange: e => setFormData({ ...formData,\n          date: formatDate(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.button,\n      variant: \"outlined\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: createTransaction,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"eNg3dzwK09FVNoGi73BxzhF0Ud4=\", false, function () {\n  return [useStyles, useSpeechContext];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useContext","TextField","Typography","Grid","Button","FormControl","InputLabel","Select","MenuItem","ExpenseTrackerContext","useStyles","v4","uuidv4","incomeCategories","expenseCategories","formatDate","useSpeechContext","Snackbar","initialState","amount","category","type","date","Date","Form","classes","addTransaction","formData","setFormData","segment","open","setOpen","createTransaction","transaction","Number","id","intent","isFinal","entities","forEach","s","value","charAt","slice","toLowerCase","map","iC","includes","selectedCategories","words","w","join","e","target","c","button"],"sources":["C:/Users/raia3/my-react-app/src/components/Main/Form/Form.js"],"sourcesContent":["\r\nimport React, { useState , useEffect, useContext} from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { ExpenseTrackerContext } from '../../../context/context'; \r\nimport useStyles from './styles';\r\nimport { v4 as uuidv4 } from 'uuid';    \r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\n\r\nconst initialState = {\r\n    amount: '',\r\n    category: '',\r\n    type: 'Income',\r\n    date: formatDate(new Date()),\r\n  };\r\nconst Form = () =>{\r\n    const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    \r\n    const transaction = { ...formData, amount: Number(formData.amount), id: uuidv4() };\r\n    addTransaction(transaction); \r\n    setFormData(initialState);\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction'){\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction'){\r\n        return setFormData(initialState);\r\n      }\r\n\r\n        segment.entities.forEach((s) => {\r\n          const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n  \r\n          switch (s.type) {\r\n            case 'amount':\r\n              setFormData({ ...formData, amount: s.value });\r\n              break;\r\n            case 'category':\r\n              if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n                setFormData({ ...formData, type: 'Income', category });\r\n              } else if (expenseCategories.map((iC) => iC.type).includes(category))  {\r\n                setFormData({ ...formData, type: 'Expense', category });\r\n              }\r\n              break;\r\n            case 'date':\r\n              setFormData({ ...formData, date: s.value });\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n    });\r\n\r\n    if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n      createTransaction();\r\n    }\r\n    }\r\n      },[segment]);\r\n\r\n\r\n\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n    return (\r\n\r\n        <Grid container spacing={2}>\r\n           <CustomizedSnackbar open={open} setOpen={setOpen} />\r\n        <Grid item xs={12}>\r\n          <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment && segment.words.map((w) => w.value).join (\" \")}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Type</InputLabel>\r\n            <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n              <MenuItem value=\"Income\">Income</MenuItem>\r\n              <MenuItem value=\"Expense\">Expense</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Category</InputLabel>\r\n            <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n  \r\n        <Grid item xs={6}>\r\n          <TextField type=\"number\" label=\"Amount\"  value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n        </Grid>\r\n        <Grid item xs={6} justify=\"flex-end\">\r\n          <TextField fullWidth label=\"  \" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date : formatDate(e.target.value) })} />\r\n        </Grid>\r\n        <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n      </Grid>\r\n    )\r\n}\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}